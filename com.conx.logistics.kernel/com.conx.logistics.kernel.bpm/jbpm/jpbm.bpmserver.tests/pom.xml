<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>com.conx.logistics.testingframework</artifactId>
		<groupId>com.conx.logistics</groupId>
		<version>1.0.0</version>
		<relativePath>../../../../com.conx.logistics.testingframework/pom.xml</relativePath>
	</parent>
  <artifactId>com.conx.logistics.kernel.bpm.impl.jbpm.bpmserver.tests</artifactId>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<dependencies>
		<dependency>
			<groupId>com.conx.logistics</groupId>
			<artifactId>com.conx.logistics.kernel.bpm.impl.jbpm.osgi-bundles</artifactId>
			<version>1.0.0</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>com.conx.logistics</groupId>
			<artifactId>com.conx.logistics.testingframework.tools</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.conx.logistics</groupId>
			<artifactId>com.conx.logistics.kernel.bpm.services</artifactId>
			<version>1.0.0</version>
		</dependency>		

		<!-- Drools & JBPM -->
		<dependency>
			<groupId>org.jbpm</groupId>
			<artifactId>jbpm-human-task-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jbpm</groupId>
			<artifactId>jbpm-workitems</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mvel</groupId>
			<artifactId>mvel2</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
		</dependency>
		<dependency>
			<groupId>org.drools</groupId>
			<artifactId>drools-persistence-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>ejb3-persistence</artifactId>
					<groupId>org.hibernate</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.btm</groupId>
			<artifactId>btm</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Test Scoped -->
		<!-- Equinox OSGi platform -->
		<dependency>
			<groupId>org.eclipse.equinox</groupId>
			<artifactId>org.eclipse.osgi</artifactId>
		</dependency>

		<dependency>
			<groupId>org.eclipse.equinox</groupId>
			<artifactId>org.eclipse.osgi.services</artifactId>
			<type>jar</type>
		</dependency>

		<dependency>
			<groupId>org.junit</groupId>
			<artifactId>com.springsource.org.junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.test</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.osgi</groupId>
			<artifactId>org.springframework.osgi.test</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.junit</groupId>
					<artifactId>com.springsource.junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.osgi</groupId>
			<artifactId>org.springframework.osgi.extensions.annotation</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.osgi</groupId>
			<artifactId>org.springframework.osgi.extender</artifactId>
		</dependency>

		<dependency>
			<groupId>org.objectweb.asm</groupId>
			<artifactId>com.springsource.org.objectweb.asm</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<forkMode>once</forkMode>
	            	<argLine>
	                 -javaagent:C:/Users/dev/.m2/repository/org/springframework/org.springframework.instrument/3.0.5.RELEASE/org.springframework.instrument-3.0.5.RELEASE.jar
	        		</argLine>
            		<useSystemClassloader>true</useSystemClassloader>
					<includes>
						<include>**/*Test.java</include>
					</includes>
					<excludes>
						<exclude>**/*IntegrationTest.java</exclude>
					</excludes>
					<argLine>-Xmx1024m -XX:MaxPermSize=128m</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.12</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includes>
						<include>**/*IntegrationTest.java</include>
					</includes>
					<argLine>-Xmx1024m -XX:MaxPermSize=128m</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>com.conx.logistics:com.conx.logistics.thirdparty.osgi.wrapper.jxls-reader</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.springsource.bundlor</groupId>
				<artifactId>com.springsource.bundlor.maven</artifactId>
				<inherited>true</inherited>
				<configuration>
					<failOnWarnings>true</failOnWarnings>
					<!-- used to properly set-up versions for system packages -->
					<osgiProfilePath>${basedir}/../../../../java6-server.profile</osgiProfilePath>
					<bundleVersion>${project.version}</bundleVersion>
					<!-- point to a different output path - so manifest will be regenerated 
						on each build and can be eyeballed if desired. Also for eclipse use, where 
						manifest is always needed -->
					<outputPath>${bundlor.manifest.output.path}</outputPath>
				</configuration>
				<executions>
					<execution>
						<id>build-manifest</id>
						<goals>
							<goal>bundlor</goal>
						</goals>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>			
		</plugins>
		<testResources>
			<testResource>
				<directory>${basedir}/src/test/resources</directory>
			</testResource>
			<testResource>
				<directory>${basedir}/src/test/filtered-resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
	</build>  
</project>