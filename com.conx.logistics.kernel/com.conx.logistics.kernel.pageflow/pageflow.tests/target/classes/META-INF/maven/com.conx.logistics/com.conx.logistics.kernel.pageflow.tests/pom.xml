<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>com.conx.logistics.kernel.pageflow</artifactId>
    <groupId>com.conx.logistics</groupId>
    <version>1.0.0</version>
    <relativePath>..</relativePath>
  </parent>
  <packaging>jar</packaging>
  <artifactId>com.conx.logistics.kernel.pageflow.tests</artifactId>
	<dependencies>
		<!-- ConX -->
		<dependency>
			<groupId>com.conx.logistics</groupId>
			<artifactId>com.conx.logistics.mdm.domain</artifactId>
			<version>1.0.0</version>
			<scope>provided</scope>
		</dependency>	
		<dependency>
			<groupId>com.conx.logistics</groupId>
			<artifactId>com.conx.logistics.kernel.pageflow.services</artifactId>
			<version>${project.version}</version>
		</dependency>			
		<dependency>
			<groupId>com.conx.logistics</groupId>
			<artifactId>com.conx.logistics.thirdparty.org.vaadin.addons.mvp-common-customized</artifactId>
			<version>0.9.2-SNAPSHOT</version>
			<scope>provided</scope>
		</dependency>	
		<dependency>
			<groupId>com.conx.logistics</groupId>
			<artifactId>com.conx.logistics.kernel.workspace.ui</artifactId>
			<version>1.0.0</version>
		</dependency>		
		<dependency>
			<groupId>com.conx.logistics</groupId>
			<artifactId>com.conx.logistics.app.whse.ui</artifactId>
			<version>1.0.0</version>
		</dependency>				
		<!-- GWT/Vaadin -->
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-servlet</artifactId>
            <version>2.3.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>2.3.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-dev</artifactId>
            <version>2.3.0</version>
            <scope>test</scope>
        </dependency>		
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.0.0.GA</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin</artifactId>
			<version>6.7.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
		   <groupId>org.vaadin.addons</groupId>
		   <artifactId>wizards-for-vaadin</artifactId>
		   <version>0.4.4</version>
		</dependency>						
		<dependency>
			<groupId>com.vaadin.addon</groupId>
			<artifactId>jpacontainer-addon-agpl-3.0</artifactId>
			<version>2.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>toolbar</artifactId>
			<version>1.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>contextmenu</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>weelayout</artifactId>
			<version>0.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>css-tools</artifactId>
			<version>0.3</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.osgi</groupId>
			<artifactId>org.springframework.osgi.extensions.annotation</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.spring-library</artifactId>
			<type>libd</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>com.springsource.freemarker</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.junit</groupId>
			<artifactId>com.springsource.org.junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.aspects</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.instrument</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>com.springsource.org.apache.commons.dbcp</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>org.aspectj-library</artifactId>
			<type>libd</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.aop</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.aopalliance</groupId>
			<artifactId>com.springsource.org.aopalliance</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>com.springsource.bundlor</groupId>
				<artifactId>com.springsource.bundlor.maven</artifactId>
				<inherited>true</inherited>
				<configuration>
					<failOnWarnings>true</failOnWarnings>
					<!-- used to properly set-up versions for system packages -->
					<osgiProfilePath>${basedir}/../../../java6-server.profile</osgiProfilePath>
					<bundleVersion>${project.version}</bundleVersion>
					<!-- point to a different output path - so manifest will be regenerated 
						on each build and can be eyeballed if desired. Also for eclipse use, where 
						manifest is always needed -->
					<outputPath>${bundlor.manifest.output.path}</outputPath>
				</configuration>
				<executions>
					<execution>
						<id>build-manifest</id>
						<goals>
							<goal>bundlor</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>  
</project>